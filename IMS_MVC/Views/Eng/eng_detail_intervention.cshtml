@model IMS_MVC.Models.IntInfo

@{
    ViewBag.Title = "Intervention Detail";
}

<h2>Intervention Detail</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.IntTypeId, "IntTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IntTypeId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.IntTypeId, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IntTypeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientId, "ClientId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClientId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ClientId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SetLabour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SetLabour, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.SetLabour, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.SetLabour)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SetCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SetCost, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.SetCost, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.SetCost)
            </div>
        </div>

        <div class="form-group none">
            @Html.LabelFor(model => model.AspNetUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AspNetUserId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.AspNetUserId, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AspNetUserId)
            </div>
        </div>

        <div class="form-group none">
            @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserId)
            </div>
        </div>

        <div class="form-group none">
            @Html.LabelFor(model => model.IntDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IntDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.IntDate, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IntDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Status)
            </div>
        </div>

        <h2>Quality Management Information</h2>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comments, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reamaining, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reamaining, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reamaining, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group none">
            @Html.LabelFor(model => model.VisitDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VisitDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.VisitDate, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.VisitDate)
            </div>
        </div>

        @Html.HiddenFor(model => model.ApprovedByUserId)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

        <h2>Administrative Information</h2>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                @if (Model.Status.Equals("Approved") || Model.Status.Equals("Completed"))
                {
                    @Html.ActionLink("Complete", "eng_complete_intervention", new { id = Model.Id }, new { @class = "btn btn-primary" })
                }
                else if(Model.Status.Equals("Proposed"))
                {
                    @Html.ActionLink("Approve", "eng_status_approve", new { id = Model.Id }, new { @class = "btn btn-success" })
                    @Html.ActionLink("Cancel", "eng_status_cancel", new { id = Model.Id }, new { @class = "btn btn-danger" })
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "eng_list_int_via_client", new { id = Model.ClientId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
